@page "/Registro/Edit/{PrestamoId:int}"

@inject PrestamosService prestamosService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@*HTML*@
<PageTitle>Modificar</PageTitle>
<EditForm Model="Prestamo" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container">
        <div class="shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Crear Prestamo</h5>
            </div>

            <div class="card-body flex-column d-flex align-content-center justify-content-center text-lg-center">
                @*Deudor*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>Deudor</strong></label>
                    <InputText class="form-control" @bind-Value="Prestamo.Deudor"></InputText>
                    <ValidationMessage For="(() => Prestamo.Deudor)" />
                </div>
                @*Concepto*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>Concepto</strong></label>
                    <InputText class="form-control" @bind-Value="Prestamo.Concepto"></InputText>
                    <ValidationMessage For="(() => Prestamo.Concepto)" />
                </div>
                @*Monto*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>Monto</strong></label>
                    <InputNumber class="form-control" @bind-Value="Prestamo.Monto"></InputNumber>
                    <ValidationMessage For="(() => Prestamo.Monto)" />
                </div>
            </div>

            @*footer*@
            <div class="card-footer text-center">
                <a href="/Registro/Index" class="btn btn-primary"> <span class="bi bi-arrow-left"></span> Volver</a>
                <button type="submit" class="btn btn-primary bi bi-floppy" @onclick="Modificar"> Modificar</button>
            </div>
        </div>
    </div>
</EditForm>
@Mensaje

@code {
    [Parameter]
    public int PrestamoId { get; set; }

    public Prestamos Prestamo { get; set; } = new Prestamos();
    public string Mensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Prestamo = await prestamosService.Buscar(PrestamoId);
    }

    public async Task Modificar()
    {
        var creado = await prestamosService.Guardar(Prestamo);

        if (creado)
        {
            Mensaje = "Modificado correctamente";
        }
        else
        {
            Mensaje = "No se ha modificado correctamente";
        }
    }
}